syntax = "proto2";

package nio.ad.messages;
import "common/perf/sensor_ts_header.proto";

message LidarDLBProperty {
    optional int32 pre_window           = 1;             // time in ms
    optional int32 post_window          = 2;             // time in ms
    optional string lidar_topic         = 3;             // lidar name for each lidar
    optional string datamask_conf       = 4;             // datamask_conf.json
    optional bool   need_serialize      = 5;             // "lidar_raw"falseï¼Œ"lidar" true
}

message LidarDlbEvent {
    enum RecordType {
        CONTINUOUS  = 0;
        SINGLE      = 1;
    }

    reserved 3, 4, 6;
    optional string uuid                = 1;             // uuid of dlb task
    optional string event               = 2;             // event name
    optional string storage_folder      = 5;             // in the same SoC of the recorder, absolute address
    optional RecordType record_type     = 7;             // 0 Continuous frame record;1 one frame record;
    optional uint64 timestamp_utc       = 8;             // time in ns
    optional uint64 timestamp_ptp       = 9;             // time in ns
    repeated LidarDLBProperty lidars_prop  = 10;        // commands for each camera
    optional uint32 priority            = 11;             // 0 ~ 100. 100 is highest
    
    optional SensorTSHeader sensor_original_ts = 536870906;   // sensor original ts
    optional uint64 publish_ptp_ts      = 536870907;     // publish ptp timestamp, uint in nanosec
    optional string publisher_id        = 536870909;     // uuid of the publisher
    optional uint64 counter             = 536870910;     // message counter
    optional uint64 publish_ts          = 536870911;     // publish utc timestamp; unit : nanosecond
}
